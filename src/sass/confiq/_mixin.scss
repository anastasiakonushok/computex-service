//media
$breakpoints: ("phone": 400px,
    "phone-wide": 480px,
    "phablet": 560px,
    "tablet-small": 640px,
    "tablet": 820px,
    "tablet-wide": 1070px,
    "desktop": 1300px,
    "desktop-wide": 1440px);

@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);

        @if $type==max {
            $width: $width - 1px;
        }

        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

//position
@mixin position($position: absolute, $top: null, $right: null, $bottom: null, $left: null, $z-index: initial) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    z-index: $z-index;
}

// placeholder
@mixin placeholder {
    &.placeholder {
        @content;
    }

    &:-moz-placeholder {
        @content;
    }

    &::-moz-placeholder {
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }

    &::-webkit-input-placeholder {
        @content;
    }
}

//background
@mixin background-gradient($start-color, $end-color, $orientation) {
    background: $start-color;

    @if $orientation=='vertical' {
        background: -webkit-linear-gradient(top, $start-color, $end-color);
        background: linear-gradient(to bottom, $start-color, $end-color);
    }

    @else if $orientation=='horizontal' {
        background: -webkit-linear-gradient(left, $start-color, $end-color);
        background: linear-gradient(to right, $start-color, $end-color);
    }

    @else {
        background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
        background: radial-gradient(ellipse at center, $start-color, $end-color);
    }
}

//width

@mixin width($value) {
    width: ($value / 16) + rem;
}

@mixin toRem($property, $value) {
    #{$property}: (($value / 16)) + rem;
}

//fonts
@mixin regular {
    font-size: var(--regular-font);
    line-height: 140%;
    font-weight: 400;
}

@mixin h1 {
    font-size: var(--h1-font);
    line-height: 110%;
    font-weight: 800;
}
@mixin h2 {
    font-size: var(--h2-font);
    line-height: 110%;
    font-weight: 700;
}
@mixin h3 {
    font-size: var(--h3-font);
    line-height: 110%;
    font-weight: 700;
}

@mixin font-128 {
    font-family: var(--title-font);
    font-size: var(--font-128);
    line-height: 110%;
    font-weight: 900;
    color:var(--main-blue);
}

// Определение миксина для кнопки
// Определение миксина для кнопки с использованием CSS-переменных
@mixin button-orange($padding, $border-radius: 15px, $font-size: 16px) {
    background-color: var(--main-orange);
    color: var(--main-white);
    padding: $padding;
    border: none;
    border-radius: $border-radius;
    font-size: $font-size;  
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s ease;
  
    &:hover {
      background-color: #d04103;
    }
  
    // &:focus {
    //   outline: none;
    //   box-shadow: 0 0 0 3px var(--focus-shadow-color);
    // }
  
    // &:active {
    //   background-color: var(--active-bg-color);
    //   box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
    // }
}
@mixin button-gray($padding, $border-radius: 5px, $font-size: 16px) {
    text-align: center;
    background-color: var(--main-gray);
    color: var(--main-white);
    padding: $padding;
    font-weight: 500;
    border: none;
    border-radius: $border-radius;
    font-size: $font-size;
    cursor: pointer;
    transition: background-color 0.3s ease;
  
    &:hover {
      background-color: var(--main-orange);
    }
  
    // &:focus {
    //   outline: none;
    //   box-shadow: 0 0 0 3px var(--focus-shadow-color);
    // }
  
    // &:active {
    //   background-color: var(--active-bg-color);
    //   box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
    // }
  }
//

@mixin button($bg, $color) {
    font-weight: 400;
    font-size: var(--regular-font);
    padding: 15px 30px;
    background: $bg;
    color: $color;
    line-height: 120%;
    font-weight: 500;
    border-radius: 8px;

    // &:hover {
    //     background: rgba($bg, 0.92); // Slightly darken the background
    //     transition: all 0.3s ease;
    // }

    // &:active {
    //     background: rgba($bg, 0.75); // Darken the background more
    // }

}

@mixin hover {
    &:hover {
        transition: all 0.3s ease;
        @content;
    }
}